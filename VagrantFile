require 'yaml'

condement_config = YAML.load_file('./condement.yaml')

Vagrant.configure(2) do |config|
    config.vm.define "Condement" do |server|
        server.vm.box = "ubuntu/bionic64"
        server.vm.hostname = condement_config['os']['hostname']

        server.vm.provider :virtualbox do |v|
            # Configure basic VM settings
            v.name = condement_config['os']['hostname']
            v.gui = condement_config['show_gui']

            # Configure resources available to the VM
            v.cpus = condement_config['resource']['cpus']
            v.memory = condement_config['resource']['memory_mb']

            # Configure clipboard and drag and drop for ease of use
            v.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
            v.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]

            # Configure the display
            accelerate3d = 'off'
            if (condement_config['resource']['video_3d_acceleration']) then
                accelerate3d = 'on'
            end

            v.customize ['modifyvm', :id, '--accelerate3d', accelerate3d]
            v.customize ['modifyvm', :id, '--vram', condement_config['resource']['video_memory_mb']]

            # Configure each host_folder as a permanent share
            if (condement_config['host_folders'] != nil) then
                condement_config['host_folders'].each do |folder_name, folder|
                    v.customize ['sharedfolder', 'add', :id, '--name', folder_name, '--hostpath', folder['source']]
                end
            end
        end

        # Configure each host_folder share in it's mount point
        if (condement_config['host_folders'] != nil) then
            condement_config['host_folders'].each do |folder_name, folder|
                config.vm.provision "shell" do |s|
                    s.path = './system_base/add_host_folder.sh'
                    s.args = [ folder_name, folder['target'] ]
                end
            end
        end

        # Update the system
        config.vm.provision "shell", inline: "apt update"
        config.vm.provision "shell", inline: "apt upgrade -y"

        # Install puppet
        config.vm.provision "shell", path: "./system_base/install_puppet.sh"

        # Run puppet base
        config.vm.provision 'puppet' do |puppet|
            puppet.manifests_path = "system_base"
            puppet.manifest_file = "puppet_base.pp"
        end

        # Set the keyboard language
        config.vm.provision "shell", inline: "sudo chmod 777 /etc/default/keyboard" # Change permissions so that file copy works
        config.vm.provision 'file', source: "./keyboard_layouts/" + condement_config['os']['keyboard_layout'], destination: '/etc/default/keyboard'

        # Install the desktop
        if (condement_config['os']['desktop'] && condement_config['os']['desktop'] != 'none') then
            config.vm.provision 'puppet' do |puppet|
                puppet.manifests_path = "desktops"
                puppet.manifest_file = condement_config['os']['desktop'] + ".pp"
            end
        end

        # Run the puppet files identified in the configuration for install
        puppet_files_to_apply = condement_config['software']
        puppet_files_to_apply.each do |puppet_file|
            config.vm.provision 'puppet' do |puppet|
                puppet.manifests_path = 'software'
                puppet.manifest_file = puppet_file + '.pp'
            end
        end

        # Start the desktop
        config.vm.provision "shell", inline: "reboot"
    end
end
